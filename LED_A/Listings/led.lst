


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             myData, DATA
    2 00000000                 ALIGN
    3 00000000 0000003F 
              00000006 
              0000005B 
              0000004F 
              00000066 
              0000006D 
              0000007D 
              00000007 
              0000007F 
              0000006F 
              00000077 
              0000007C 
              00000039 
              0000005E 
              00000079 
              00000071 array   DCD              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0
x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71 
                                                            ; array from 0-F
    4 00000040 00000010 
                       size    DCD              16
    5 00000044         
    6 00000044        6 
                       E       RN               r6
    7 00000044        7 
                       H       RN               r7
    8 00000044        8 
                       A       RN               r8
    9 00000044         
   10 00000044         
   11 00000044                 AREA             mycode, CODE, READONLY
   12 00000000                 EXPORT           __main
   13 00000000         
   14 00000000 40000000 
                       PERIPH_BASE
                               EQU              0x40000000
   15 00000000         Delay   PROC
   16 00000000 B402            push             {r1}
   17 00000002 F44F 21C0       ldr              r1, =0x60000 ;initial value for
                                                             loop counter
   18 00000006 BF00    again   NOP                          ;execute two no-ope
                                                            ration instructions
                                                            
   19 00000008 BF00            NOP
   20 0000000A 3901            subs             r1, #1
   21 0000000C D1FB            bne              again
   22 0000000E BC02            pop              {r1}
   23 00000010 4770            bx               lr
   24 00000012                 ENDP
   25 00000012         init    PROC
   26 00000012         ; output initialization
   27 00000012 482A            LDR              r0, =0x4002104C ; enable clocks
                                                             for GPIOE and GPIO
                                                            H and GPIOA
   28 00000014 6801            LDR              r1, [r0]
   29 00000016 F041 0101       ORR              r1, r1, #0x00000001
   30 0000001A F041 0110       ORR              r1, r1, #0x10
   31 0000001E F041 0180       ORR              r1, r1, #0x80



ARM Macro Assembler    Page 2 


   32 00000022 6001            STR              r1, [r0]
   33 00000024         
   34 00000024         
   35 00000024         
   36 00000024         
   37 00000024         ;;Sets the type to push pull
   38 00000024 4E26            LDR              E, =0x48001000
   39 00000026 6831            LDR              r1, [E,#0]
   40 00000028 4A26            LDR              r2, =~0xFFF00000
   41 0000002A EA01 0102       AND              r1, r1, r2  ;GPIOE->MODER   &= 
                                                             ~(0xFFF00000)    
   42 0000002E 4A26            LDR              r2, =0x55500000
   43 00000030 EA41 0102       ORR              r1, r1, r2  ;GPIOE->MODER   |= 
                                                              (0x55500000)     
                                                               
   44 00000034 6031            STR              r1, [E,#0]
   45 00000036         
   46 00000036         
   47 00000036         
   48 00000036 88B1            LDRH             r1, [E,#4]  ;GPIOE->OTYPER ??lo
                                                            cation
   49 00000038 F021 013F       AND              r1,#~(0x3F)
   50 0000003C 80B1            STRH             r1, [E,#4]
   51 0000003E         
   52 0000003E         ;;Sets the Pupdr
   53 0000003E 68F1            LDR              r1, [E,#0xC] ;GPIOE->PUPDR
   54 00000040 F8D1 B000       LDR              r11, [r1]
   55 00000044 4A1F            LDR              r2, =~0xFFF00000
   56 00000046 EA01 0102       AND              r1, r1, r2
   57 0000004A 60F1            STR              r1, [E,#0xC]
   58 0000004C         
   59 0000004C         
   60 0000004C         
   61 0000004C 4F1F            LDR              H, =0x48001C00 ;GPIOH_BASE     
                                                            
   62 0000004E         
   63 0000004E 683B            LDR              r3, [H,#0]
   64 00000050 F06F 0403       LDR              r4, =~0x00000003
   65 00000054 EA03 0304       AND              r3, r3, r4  ;GPIOH->MODER   &= 
                                                             ~(0x00000003) 
   66 00000058 F043 0301       ORR              r3, r3, #0x01 ;GPIOH->MODER   |
                                                            =   (0x00000001)   
                                                                 
   67 0000005C 603B            STR              r3, [H,#0]
   68 0000005E         
   69 0000005E 88BB            LDRH             r3, [H,#4]  ;GPIOH->OTYPER 
   70 00000060 F023 0301       AND              r3, r3, #~(0x00000001)
   71 00000064 80BB            STRH             r3, [H,#4]
   72 00000066         
   73 00000066 68FB            LDR              r3, [H,#0xC] ;GPIOH->PUPDR
   74 00000068 F06F 0403       LDR              r4, =~0x000000003
   75 0000006C EA03 0304       AND              r3, r3, r4
   76 00000070 60FB            STR              r3, [H,#0x0C]
   77 00000072         
   78 00000072         
   79 00000072         
   80 00000072         
   81 00000072         
   82 00000072         



ARM Macro Assembler    Page 3 


   83 00000072 F04F 4090       LDR              r0, =0x48000000 ;Setting mode o
                                                            f GPIOA to input
   84 00000076 6801            LDR              r1, [r0]
   85 00000078 F421 614C       AND              r1, r1, #~(0xCC0)
   86 0000007C 6001            STR              r1, [r0]
   87 0000007E         
   88 0000007E 4814            LDR              r0, =0x48000004 ;Setting type o
                                                            f GPIOA to push pul
                                                            l
   89 00000080 6801            LDR              r1, [r0]
   90 00000082 F021 0128       AND              r1, r1, #~(0x28)
   91 00000086 6001            STR              r1, [r0]
   92 00000088         
   93 00000088 4812            LDR              r0, =0x4800000C ;Setting port a
                                                             to pull down 
   94 0000008A 6801            LDR              r1, [r0]
   95 0000008C F421 614C       AND              r1, r1, #~(0xCC0)
   96 00000090 F441 6108       ORR              r1, r1, #0x880
   97 00000094 6001            STR              r1, [r0]
   98 00000096 4770            BX               LR
   99 00000098                 ENDP
  100 00000098         
  101 00000098         
  102 00000098         
  103 00000098                 ENTRY
  104 00000098         __main  PROC
  105 00000098 F7FF FFFE       BL               init
  106 0000009C         ;;MAKE SHURE YOURE CHANGE THIDDSFSBD DSKFNASL
  107 0000009C         
  108 0000009C         
  109 0000009C 480E            LDR              r0, =0x48001014 ;GPIOE ODR
  110 0000009E F04F 0166       MOV              r1, #0x66   ; change this later
                                                             to zero
  111 000000A2 F001 013F       AND              r1, r1, #0x3F
  112 000000A6 EA4F 2181       LSL              r1, #10     ; shifting 10 to th
                                                            e left
  113 000000AA 6001            STR              r1, [r0]
  114 000000AC         
  115 000000AC 480B            LDR              r0, =0x48001C14 ;GPIOH ODR
  116 000000AE F04F 0166       MOV              r1, #0x66   ;Segment zero
  117 000000B2 F001 0140       AND              r1, r1, #0x40
  118 000000B6 EA4F 1191       LSR              r1, #6
  119 000000BA 6001            STR              r1, [r0]
  120 000000BC         
  121 000000BC         
  122 000000BC                 END
              4002104C 
              48001000 
              000FFFFF 
              55500000 
              48001C00 
              48000004 
              4800000C 
              48001014 
              48001C14 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\led.d -o.\objects\led.o -I.\RTE\_Target_1 -IC:\Keil_v
5\ARM\PACK\Keil\STM32L4xx_DFP\1.2.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Inclu
de --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 523" --prede



ARM Macro Assembler    Page 4 


fine="STM32L476xx SETA 1" --list=.\listings\led.lst led.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

array 00000000

Symbol: array
   Definitions
      At line 3 in file led.s
   Uses
      None
Comment: array unused
myData 00000000

Symbol: myData
   Definitions
      At line 1 in file led.s
   Uses
      None
Comment: myData unused
size 00000040

Symbol: size
   Definitions
      At line 4 in file led.s
   Uses
      None
Comment: size unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Delay 00000000

Symbol: Delay
   Definitions
      At line 15 in file led.s
   Uses
      None
Comment: Delay unused
__main 00000098

Symbol: __main
   Definitions
      At line 104 in file led.s
   Uses
      At line 12 in file led.s
Comment: __main used once
again 00000006

Symbol: again
   Definitions
      At line 18 in file led.s
   Uses
      At line 21 in file led.s
Comment: again used once
init 00000012

Symbol: init
   Definitions
      At line 25 in file led.s
   Uses
      At line 105 in file led.s
Comment: init used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 11 in file led.s
   Uses
      None
Comment: mycode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PERIPH_BASE 40000000

Symbol: PERIPH_BASE
   Definitions
      At line 14 in file led.s
   Uses
      None
Comment: PERIPH_BASE unused
1 symbol
348 symbols in table
